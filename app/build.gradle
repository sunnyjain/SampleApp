apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'androidx.navigation.safeargs'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.example.sampleapp"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    def daggerVersion = '2.16'
    def rxjava = "2.2.1"
    def rxAndroid = "2.1.0"

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation "com.android.support:support-v4:$rootProject.supportLibraryVersion"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'


    implementation 'com.google.android.material:material:1.0.0'

    //di annotation processors
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"

    //di
    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    //room persistent lib
    implementation 'androidx.room:room-runtime:2.0.0'
    kapt 'androidx.room:room-compiler:2.0.0'
    androidTestImplementation 'androidx.room:room-testing:2.0.0'
    implementation 'androidx.room:room-rxjava2:2.0.0'

    implementation 'androidx.navigation:navigation-fragment:2.0.0' // use -ktx for Kotlin
    implementation 'androidx.navigation:navigation-ui:2.0.0' // use -ktx for Kotlin

    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    kapt 'androidx.lifecycle:lifecycle-compiler:2.0.0'


    //rx
    implementation "io.reactivex.rxjava2:rxjava:$rxjava"
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroid"

    //stetho
    implementation 'com.facebook.stetho:stetho:1.5.0'

    /**
     * could not make it work as it constantly gave me google services error.
     * Exception stack :
     * W/DynamiteModule( 1417): Local module descriptor class for com.google.android.gms.vision.dynamite not found.
     * I/DynamiteModule( 1417): Considering local module com.google.android.gms.vision.dynamite:0 and remote module com.google.android.gms.vision.dynamite:801
     * I/DynamiteModule( 1417): Selected remote version of com.google.android.gms.vision.dynamite, version >= 801
     * W/DynamiteModule( 1417): Local module descriptor class for com.google.android.gms.vision.dynamite not found.
     * I/DynamiteModule( 1417): Considering local module com.google.android.gms.vision.dynamite:0 and remote module com.google.android.gms.vision.dynamite:801
     * I/DynamiteModule( 1417): Selected remote version of com.google.android.gms.vision.dynamite, version >= 801
     *
     */
    //implementation 'com.google.firebase:firebase-ml-vision:22.0.0'

    /*Retrofit lib*/
    implementation 'com.squareup.retrofit2:retrofit:2.6.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.6.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'

    //attempt 2
    implementation 'me.dm7.barcodescanner:zxing:1.9.13'


    //camera library for the google scanner. unfortunately not working.
    implementation project(':library')

}

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
    maven { url 'https://maven.fabric.io/public' }
}

apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.google.gms.google-services'
